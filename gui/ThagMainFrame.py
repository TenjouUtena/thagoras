# -*- coding: CP1252 -*-
#
# generated by wxGlade 0.7.0 on Sun Aug 16 14:56:05 2015
#

import wx
# begin wxGlade: dependencies
# end wxGlade

import net.net as net

from ThagWorldFrame import ThagWorldFrame

# begin wxGlade: extracode
# end wxGlade
def setTelnetProps(gui, telnet):
    print called
    print gui
    print telnet
    gui.telnet = telnet

class ThagMainFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        worlds = kwds['worlds']
        kwds.pop('worlds')
        # begin wxGlade: ThagMainFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        
        # Menu Bar
        self.thag_main_frame_menubar = wx.MenuBar()
        wxglade_tmp_menu = wx.Menu()
        connect_menu = wx.Menu()
        connect_menu.Append(wx.ID_ANY, "---", "", wx.ITEM_NORMAL)
        wxglade_tmp_menu.AppendMenu(wx.ID_ANY, "Connect", connect_menu, "")
        self.thag_main_frame_menubar.Append(wxglade_tmp_menu, "File")
        self.SetMenuBar(self.thag_main_frame_menubar)
        # Menu Bar end

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

        #wxglade_tmp_menu_sub = wx.Menu()
        #wxglade_tmp_menu_sub.Append(wx.ID_ANY, "world1", "", wx.ITEM_NORMAL)

        ## Remember the connect menu
        self.connect_menu = connect_menu

        ## Programatically add the worlds.
        if(worlds):
            for ww in worlds:
                submenu1 = wx.MenuItem(self.connect_menu, wx.ID_ANY, ww.name, "", wx.ITEM_NORMAL)
                #subment1.world = ww
                self.connect_menu.AppendItem(submenu1)
                self.Bind(wx.EVT_MENU, lambda evt, world=ww: self.DoConnect(evt, world), submenu1)
                


    def __set_properties(self):
        # begin wxGlade: ThagMainFrame.__set_properties
        self.SetTitle("frame_2")
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: ThagMainFrame.__do_layout
        sizer_1 = wx.GridSizer(1, 4, 1, 1)
        self.SetSizer(sizer_1)
        sizer_1.Fit(self)
        self.Layout()
        # end wxGlade

    def DoConnect(self, event, world):  # wxGlade: ThagMainFrame.<event_handler>
        ## Create window
        ww = ThagWorldFrame(self,  wx.ID_ANY, "", world=world)
        tt = net.connect(world.address, world.port, ww, world)

        ww.Show()

# end of class ThagMainFrame
